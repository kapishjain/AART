@{
    ViewBag.Title = "Author Review";
}

@{
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.js">
@*<script src="~/GeneralJscripts/TelerikScripts/jquery.min.js"></script>
    <script src="~/GeneralJscripts/TelerikScripts/jszip.min.js"></script>
    <script src="~/GeneralJscripts/TelerikScripts/kendo.all.min.js"></script>

    <link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet" />
    <link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.rtl.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.blueopal.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.blueopal.mobile.min.css" rel="stylesheet">
    <script src="~/Scripts/diff_match_patch.js"></script>*@
@*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>*@
@*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
@*<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">*@
@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>*@
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
@*<script src="https://cdn.tiny.cloud/1/z3nlcbnpwyo8jleqdpgi909s6hlk4twhqii9408762djdpvt/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>tinymce.init({ selector: 'textarea' });</script>*@

<style>
    table.k-editor {
        height: 500px !important;
    }

    .popupfield {
        padding: 0px !important;
        height: 570px !important;
        margin-top: 15px !important;
    }

    th {
        text-align: center !important;
        padding: 15px;
        background-color: #1a5087;
        color: white;
    }

    #table td {
        padding: 15px;
    }
    /*th, td {
            padding: 15px !important;
        }*/

    .kicofmt {
        color: #265690;
        font-weight: 600;
        padding-bottom: 15px;
        padding-top: 10px;
        font-size: 27px;
        margin: 0px;
    }
    /*
        Increase the width of the edit form.
        The default one is 400px.
    */

    .k-edit-form-container {
        width: 100% !important;
    }

    .k-edit-form-container {
        width: 100%;
        /*height: 701px;*/
    }

    .k-edit-buttons {
        bottom: -5% !important;
    }
    /*
        Decrease the width of the edit form labels. The default one is 30%.
        The new width should depend on the column titles.
        Switch the text alignment to the left. By default, it is to the right.
    */

    .k-popup-edit-form .k-edit-label {
        width: 5%;
        text-align: left;
    }

    /*
        Increase the width of the textbox containers. The default one is 60%.
        The sum of label and editor percentage widths should be around 90%, to make up for existing paddings.
    */
    .k-popup-edit-form .k-edit-field {
        width: 90%;
    }

        /*
        Expand the edit textboxes and any other Kendo UI widgets.
        In case of unexpected side effects, use widget-specific classes, instead of .k-widget.
    */
        .k-popup-edit-form .k-edit-field > .k-textbox,
        .k-popup-edit-form .k-edit-field > .k-widget:not(.k-tooltip) {
            width: 98%;
        }

    .k-window {
        visibility: visible;
        display: block;
        /*padding-top: 44px !important;*/
        min-width: 90px;
        min-height: 50px;
        /*top: 1% !important;*/
        left: 1% !important;
        z-index: 10003;
        opacity: 1;
        transform: scale(1);
        width: 98% !important;
        height: 680px !important;
    }

    .k-editor-dialog.k-editor-table-wizard-dialog.k-window-content {
        width: 100% !important;
        overflow: auto !important;
    }

    .k-editor-dialog.k-editor-table-wizard-dialog .k-tabstrip-wrapper .k-content {
        height: 100% !important;
    }

    .k-window > div.k-popup-edit-form {
        width: 100% !important;
    }

    .red {
        color: black;
        background-color: #ea5757;
    }

    .blue {
        background-color: #8db0ee;
        color: black;
    }

    .orange {
        background-color: #ffc459;
        color: black;
    }

    .green {
        background-color: #cee9b4;
        color: black;
    }

    .black {
        color: black;
    }

    ins {
        background-color: #cfc;
        text-decoration: none;
    }



    del {
        color: #999;
        background-color: #FEC8C8;
    }

    .disablebutton {
        background-color: gray !important;
        cursor: not-allowed !important;
    }
</style>
<script>
    $(function () {
        $("#dialog-2").dialog({
            autoOpen: false,
            buttons: {
                OK: function () { $(this).dialog("close"); }
            },
            title: "Pending Activity and section",
            position: {
                my: "left center",
                at: "left center"
            }
        });
        //$("#opener-2").click(function () {
        //    $("#dialog-2").dialog("open");
        //});
    });
</script>
<script type="text/x-kendo-template" id="lineHeight-template">
    <label for='templateTool' style='vertical-align:middle;'>Line spacing:</label>
    <select id='templateTool' style='width:110px'><option value='120%'>Single</option><option value='180%'>1.5 lines</option><option value='240%'>Double</option></select>
</script>
<script type="text/x-kendo-template" id="insertSymbol-template">
    <label for='templateTool1' style='vertical-align:middle;'>Insert Symbol:</label>
    <select id='templateTool1' style='width:90px'>
        <option value='1'>&Omega;</option>
        <option value='2'>&reg;</option>
        <option value='3'>&raquo;</option>
        <option value='4'>&euro;</option>
        <option value='5'>&pound;</option>
        <option value='6'>&yen;</option>
        <option value='7'>&copy;</option>
        <option value='8'>&trade;</option>
        <option value='9'>&plusmn;</option>
        <option value='10'>&ne;</option>
        <option value='11'>&le;</option>
        <option value='12'>&ge;</option>
        <option value='13'>&divide;</option>
        <option value='14'>&Chi;</option>
        <option value='15'>&infin;</option>
        <option value='16'>&mu;</option>
        <option value='17'>&alpha;</option>
        <option value='18'>&beta;</option>
        <option value='19'>&Pi;</option>
        <option value='20'>&UnderBar;</option>
    </select>

</script>
<script>
    var MergeColumnCellsCommand = kendo.ui.editor.Command.extend({
        exec: function () {
            var range = this.lockRange(true),
                currentTd = kendo.ui.editor.Dom.closest(range.endContainer, "td"),
                columnIndex = kendo.ui.editor.Dom.findNodeIndex(currentTd);
            nextTd = $(currentTd).parent().next().children()[columnIndex];

            if (currentTd && nextTd) {
                nextTd.remove();
                $(currentTd).prop("rowspan", 2);
            }

            this.releaseRange(range);
        }
    });

    var MergeRowCellsCommand = kendo.ui.editor.Command.extend({
        exec: function () {
            var range = this.lockRange(true),
                currentTd = $(kendo.ui.editor.Dom.closest(range.endContainer, "td")),
                nextTd = currentTd.next();

            if (currentTd && nextTd) {
                nextTd.remove();
                currentTd.prop("colspan", 2);
            }

            this.releaseRange(range);
        }
    });

    $.extend(kendo.ui.editor, {
        MergeColumnCellsCommand: MergeColumnCellsCommand,
        MergeRowCellsCommand: MergeRowCellsCommand
    });

    var mergeTool = kendo.ui.editor.TableModificationTool.extend({
        command: function (commandArguments) {
            var options = $.extend(commandArguments, this.options);

            if (options.type == "column") {
                return new MergeColumnCellsCommand($.extend(commandArguments, {}));
            } else {
                return new MergeRowCellsCommand($.extend(commandArguments, {}));
            }
        }
    });

    kendo.ui.editor.EditorUtils.registerTool(
        "cellsMergeVertically",
        new mergeTool({
            type: "column",
            action: "merge",
            template: new kendo.ui.editor.ToolTemplate({
                template: kendo.ui.editor.EditorUtils.buttonTemplate,
                title: "Merge Next Column"
            })
        })
    );

    kendo.ui.editor.EditorUtils.registerTool(
        "cellsMergeHorizontally",
        new mergeTool({
            type: "row",
            action: "merge",
            template: new kendo.ui.editor.ToolTemplate({
                template: kendo.ui.editor.EditorUtils.buttonTemplate,
                title: "Merge Next Row"
            })
        })
    );
</script>
<script>

    var wnd, detailsTemplate, Id, Status, Comment, dataWnd, dataTemplate, diffSecWnd, diffActWnd, diffSecTemplate, diffActTemp, template, from;

    $(document).ready(function () {
        var productdtls;
        var prodoctemplate;
        var prodocsection;
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetProDocStructure","Home")',
            contentType: "application/json",
            dataType: "json",
            async: false,
            success: function (result) {
                productdtls = JSON.parse(result.getprodocdtls);
                $("#product-name").text(productdtls[0].productname);
                $("#doctype").text(productdtls[0].documentname);

                $("#reviewprd").text(productdtls[0].reviewperiod);

                $("#komdate").text(productdtls[0].kom);

                prodoctemplate = JSON.parse(result.getprodoctemplate);
                prodocsection = JSON.parse(result.getprodocsecassignment);
            },
            error: function (response) {
                swal('error');
            }
        });
        var datasource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ProDoc_Section_Assignment_id",
                    fields: {
                        Section: { type: 'string', editable: false },
                        Template_Content: { type: 'string', editable: true },
                        Status: { type: 'string', editable: false },
                        Product_Status: { type: 'string', editable: false },

                    }
                }
            },
            transport: {
                read: {
                    url: '@Url.Action("ProDocSecAssList", "Home")',
                    type: 'post',
                    dataType: 'json',
                    complete: function (e) {
                        //console.log(e);
                    }
                },
                update: {
                    url: '@Url.Action("UpdateProDocSecAss", "Home")',
                    type: 'post',
                    dataType: 'json',
                    complete: function (e) {
                        swal(e.responseJSON.info);
                        $("#grid").data("kendoGrid").dataSource.read();

                    }
                },
                parameterMap: function (options, operation) {
                    if (operation != "read") {
                        return { models: options }
                    }
                }
            },
            // pageSize: 10
        });

        $("#grid").kendoGrid({
            dataSource: datasource,
            // height: 750,
            reorderable: true,
            sortable: true,
            //pageable: {
            //        alwaysVisible: false,
            //        pageSizes: [10, 20, 30]
            //    },
            resizable: true,
            columns: [
                { field: "Section", title: "Section", width: "300px" },
                { field: "Status", editable: false, title: "Status", width: "100px", template: '<a style="text-decoration: none;"  class="#:   Status==\"Reverted\"? \"red\" : Status==\"Submitted\"? \"green\" : Status==\"To be reviewed\"? \"orange\" :\"black\"#" )">#=Status#</a>' },

                { field: "Template_Content", title: "Template Content", encoded: false, editor: SectionEditor },

                { command: ["edit", { name: "Submit", click: SubmitSecRecord }, { name: "Accept", click: AcceptRecord }, { name: "Revert", click: RevertRecord }], width: "100px" },
                { command: [{ name: "View Comments", click: OpenData }], width: "100px" }
            ],
            editable: {
                mode: "popup",
                window: {
                    title: "Edit",
                    animation: true,
                    width: "100%",
                    height: "700px",
                }
            },
            dataBound: function (e) {
                $("#grid tbody tr .k-grid-edit").each(function () {
                    var currentDataItem = $("#grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#grid tbody tr .k-grid-Submit").each(function () {
                    var currentDataItem = $("#grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#grid tbody tr .k-grid-Accept").each(function () {
                    var currentDataItem = $("#grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#grid tbody tr .k-grid-Revert").each(function () {
                    var currentDataItem = $("#grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
            }
        });

        var pDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ProDoc_Template_id",
                    fields: {
                        Action: { type: 'string', editable: false },
                        Status: { type: 'string', editable: false },

                        Template_Content: { type: 'string', editable: true },
                        ProductStatus: { type: 'string', editable: true },

                    }
                }
            },
            transport: {
                read: {
                    url: '@Url.Action("ProDocActList", "Home")',
                    type: 'post',
                    dataType: 'json',
                    complete: function (o) {
                        //console.log(o);
                    }
                },
                update: {
                    url: '@Url.Action("UpdateProDocActAss", "Home")',
                    type: 'post',
                    dataType: 'json',
                    complete: function (e) {
                        swal(e.responseJSON.info);
                        $("#act-grid").data("kendoGrid").dataSource.read();

                        //reloadPage();
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation != "read") {
                        return { models: options }
                    }
                }
            },
            //pageSize: 10
        });

        $("#act-grid").kendoGrid({
            dataSource: pDataSource,
            // height: 750,
            reorderable: true,
            sortable: true,
            //pageable: {
            //        alwaysVisible: false,
            //        pageSizes: [10, 20, 30]
            //    },
            resizable: true,
            columns: [
                { field: "Action", title: "Action"},
                { field: "Status", editable: false, title: "Status", template: '<a style="text-decoration: none;"  class="#:   Status==\"Reverted\"? \"red\" : Status==\"Submitted\"? \"green\" : Status==\"To be reviewed\"? \"orange\" :\"black\"#" )">#=Status#</a>' },

                { field: "Template_Content", title: "Comment", encoded: false, editor: SectionEditor },
                { command: [ { name: "Submit", click: SubmitActRecord }, { name: "Accept", click: AcceptActRecord }, { name: "Revert", click: RevertActRecord }], width: "100px" },
                { command: [{ name: "Contact Log", click: OpenActData }], width: "100px" }
            ],
            editable: "popup",
            dataBound: function (e) {
                $("#act-grid tbody tr .k-grid-edit").each(function () {
                    var currentDataItem = $("#act-grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#act-grid tbody tr .k-grid-Submit").each(function () {
                    var currentDataItem = $("#act-grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#act-grid tbody tr .k-grid-Accept").each(function () {
                    var currentDataItem = $("#act-grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
                $("#act-grid tbody tr .k-grid-Revert").each(function () {
                    var currentDataItem = $("#act-grid").data("kendoGrid").dataItem($(this).closest("tr"));
                    //Check in the current dataItem if the row is editable
                    if (currentDataItem.Product_Status == "C") {
                        //$(this).remove();
                        $(this).prop('disabled', true);
                        $(this).addClass("disablebutton");
                    }
                })
            }
        });

    });

    function SectionEditor(container, options) {
//                 $('<textarea class="textarea" data-bind="value: ' + options.field + '" style="width: 100%;height:100%;" />').appendTo(container).append(tinymce.init({
//    selector: "textarea",
//    plugins: [
//        "advlist autolink lists link image charmap print preview anchor",
//        "searchreplace visualblocks code fullscreen",
//        "insertdatetime media table paste"
//    ],
//    toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
//}));

            //$('<textarea data-bind="value: ' + options.field + '" rows="4" cols="1000"></textarea>').appendTo(container);
        $('<textarea class="textarea" data-bind="value: ' + options.field + '" style="width: 100%;height:100%;" />').appendTo(container).kendoEditor({
            resizable: { content: true },
            encoded: false,

            execute: function (e) {
                var editor = this;
                if (e.name == "createtable") {
                    setTimeout(function () {
                        var table = $(editor.body).find("table:not(.custom-table)");
                        table.addClass("custom-table");
                        table.attr("style", "border-collapse: collapse; border: 1px solid black; ");
                        table.find("tr td")
                            .each(function () {
                                var currentStyle = $(this).attr("style");
                                $(this).attr("style", currentStyle + " border: 1px solid black;");
                            });
                    }, 0);
                }
            },
            tools: [
                {
                    name: "fontName",
                    items: [
                        { text: "Andale Mono", value: "Andale Mono" },
                        { text: "Arial", value: "Arial" },
                        { text: "Arial Black", value: "Arial Black" },
                        { text: "Book Antiqua", value: "Book Antiqua" },
                        { text: "Calibri", value: "Calibri" },
                        { text: "Comic Sans MS", value: "Comic Sans MS" },
                        { text: "Courier New", value: "Courier New" },
                        { text: "Georgia", value: "Georgia" },
                        { text: "Helvetica", value: "Helvetica" },
                        { text: "Impact", value: "Impact" },
                        { text: "Symbol", value: "Symbol" },
                        { text: "Tahoma", value: "Tahoma" },
                        { text: "Terminal", value: "Terminal" },
                        { text: "Times New Roman", value: "Times New Roman" },
                        { text: "Trebuchet MS", value: "Trebuchet MS" },
                        { text: "Verdana", value: "Verdana" },
                        { text: "Webdings", value: "Webdings" },
                        { text: "Wingdings", value: "Wingdings" }]
                },
                {
                    name: "fontSize",
                    items: [
                        { text: '8px', value: '8px' },
                        { text: '10px', value: '10px' },
                        { text: '13px', value: '13px' },
                        { text: '16px', value: '16px' },
                        { text: '18px', value: '18px' },
                        { text: '24px', value: '24px' },
                        { text: '26px', value: '26px' },
                        { text: '28px', value: '28px' },
                        { text: '36px', value: '36px' },
                        { text: '48px', value: '48px' },
                        { text: '72px', value: '72px' }
                    ]
                },
                {
                    name: "customTemplate",
                    template: $("#lineHeight-template").html()
                },
                {

                    name: "customTemplate1",
                    template: $("#insertSymbol-template").html(),
                },
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "insertImage",
                "insertFile",
                "subscript",
                "superscript",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "cellsMergeVertically",
                "cellsMergeHorizontally",
                "viewHtml",
                "formatting",
                 "copyFormat",
                "applyFormat",
                "cleanFormatting",
                "foreColor",
                "backColor",
                "print"
            ],
            imageBrowser: {
                messages: {
                    dropFilesHere: "Drop files here"
                },
                transport: {
                    read: {
                        //url: "https://demos.telerik.com/kendo-ui/service/ImageBrowser/Read",
                        url: '@Url.Action("Read", "ImageBrowser")',
                        type: "post"

                    },
                    destroy: {
                        url: '@Url.Action("Destroy", "ImageBrowser")',
                        type: "POST"
                    },
                    create: {
                        url: '@Url.Action("Create", "ImageBrowser")',
                        type: "POST"
                    },

                    thumbnailUrl: '@Url.Action("Thumbnail", "ImageBrowser")',

                    uploadUrl: '@Url.Action("Upload", "ImageBrowser")',
                    imageUrl: '@Url.Action("Image", "ImageBrowser", new { path = "ID" })'.replace("ID", '{0}'),
                }
            },
        });
        $("#templateTool").kendoDropDownList({
            change: function (e) {
                $(".textarea").data("kendoEditor").body.style.lineHeight = e.sender.value();

            }
        });
        $("#templateTool1").kendoDropDownList({
            change: function (e) {
                var inputValue = e.sender._inputValue();
                var editor = $(".textarea").data("kendoEditor");
                editor.exec("inserthtml", { html: inputValue });                //$('#editor').data('kendoEditor').exec("insertHtml", { html: inputValue });
            },

        });
	};

	function reloadPage() {
		window.location.reload();
	}

	// window for sections view data
    function OpenData(e) {

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

		from = "Section"
		Id = dataItem.ProDoc_Section_Assignment_id;

        $.ajax({
            url: '@Url.Action("GetViewData", "Home")',
            type: 'post',
            dataType: 'json',
            data: {
				id: Id,
				templateVar: from
            },
            success: function (rs) {
			//	console.log(rs);
				if (rs.Count < 0) {
					swal("Not commented Yet!")
					return
				}
                $("#data-grid").kendoGrid({
                    dataSource: rs,
                    sortable: true,
                    pageable: false,
                    columns: [
                        { field: "Name", title: "Name" },
                        { field: "Reviewer_Datetime", title: "Date/Time" },
                        { field: "Status", title: "Status" },
                        { field: "Review_Comment", title: "Comment" },
                        { command: [{ name: "Difference", click: OpenDiffData }], width: "100px" }
                    ],
                    editable: false
                }).data("kendoGrid");
            },
            error: function (err) {
                swal(err);
            }
        });


        dataWnd = $("#k-dwnd").kendoWindow({
            width: 1000,
            title: "Details",
            visible: false,
            modal: true
        }).data("kendoWindow");

        dataWnd.center().open();
    }

    // submit section record
    function SubmitSecRecordByUser() {

        Comment = $("#comment").val();
        //console.log("Update: ", Comment);

        recId = $("#pro-sec-id").text();

        recStatus = $("#status").text();
       // console.log("status: ", recStatus);

        recTemp = $("#template-content").html();
       // console.log("template: ", recTemp);

        $.ajax({
            url: '@Url.Action("SubmitAuthRevSecAsignRecordByUser", "Home")',

            type: 'post',
            data: {
                id: recId,
                status: recStatus,
                comment: Comment,
                templateContent: recTemp,
            },
            success: function (res) {

                varJ = JSON.parse(res);
                //console.log(varJ);

                //console.log("Success: ", res);
                swal(varJ.info);
                wnd.center().close();
                                reloadPage();

            },
            error: function (err) {
                swal("Error occured");
                //console.log("Error: ",err);
                wnd.center().close();
            }
        });
    }

    function SubmitActRecordByUser() {

        Comment = $("#comment").val();
        //console.log("Update: ", Comment);

        recId = $("#pro-act-id").text();

        recStatus = $("#status").text();
        //console.log("status: ", recStatus);

        recTemp = $("#template-content").html();
        //console.log("template: ", recTemp);

        $.ajax({
            url: '@Url.Action("SubmitAuthRevActAsignRecordByUser", "Home")',
            type: 'post',
            data: {
                id: recId,
                status: recStatus,
                comment: Comment,
                templateContent: recTemp,
            },
            success: function (res) {

                varJ = JSON.parse(res);
               // console.log(varJ);

                //console.log("Success: ", res);
                swal(varJ.info);
                wnd.center().close();
                                reloadPage();

            },
            error: function (err) {
                swal("Error occured");
                //console.log("Error: ",err);
                wnd.center().close();
            }
        });
    }


	// window for activity view data
	function OpenActData(a) {

        var dataItem = this.dataItem($(a.currentTarget).closest("tr"));

		from = "Activity"
		Id = dataItem.ProDoc_Template_id;

        $.ajax({
            url: '@Url.Action("GetViewData", "Home")',
            type: 'post',
            dataType: 'json',
            data: {
				id: Id,
				templateVar: from
            },
			success: function (r) {
				//console.log("View data window item length: ", r)
				//console.log(r.Count);
				if (r.Count < 0) {
					swal("Not commented Yet!");
					return;
				}
                $("#diff-data-grid").kendoGrid({
                    dataSource: r,
                    sortable: true,
                    pageable: false,
                    columns: [
                        { field: "Name", title: "Name" },
                        { field: "Reviewer_Datetime", title: "Date/Time" },
                        { field: "Status", title: "Status" },
                        { field: "Review_Comment", title: "Comment" },
                        //{ command: [{ name: "Difference", click: OpenActDiffData }], width: "100px" }
                    ],
                    editable: false
                }).data("kendoGrid");
            },
            error: function (err) {
                swal(err);
            }
        });


        dataWnd = $("#k-diffwnd").kendoWindow({
            width: 1000,
            title: "Contact Log",
            visible: false,
            modal: true
        }).data("kendoWindow");

        dataWnd.center().open();
	}

	// window for accept functionality for activity
	function AcceptActRecord(e) {

         wnd = $("#k-wnd").kendoWindow({
             width: 400,
             height: 150,
             padding : 0,

             title: "Contact Log",
             actions: ["Close"],
             visible: false,
             modal: true,
         }).data("kendoWindow");

        detailsTemplate = kendo.template($("#comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //console.log("Accept: ", dataItem);

		Id = dataItem.ProDoc_Template_id;
		from = "Activity";
        Status = "S";
        template = dataItem.Template_Content;

        //console.log("id + status: ", Id, Status);

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
	}

	// window for revert functionality for activity
	function RevertActRecord(e) {

		wnd = $("#k-wnd").kendoWindow({
             width: 400,
             height: 150,
             padding : 0,
             title: "Contact Log",
             actions: ["Close"],
             visible: false,
             modal: true,
         }).data("kendoWindow");

        detailsTemplate = kendo.template($("#comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //console.log("Reject: ", dataItem);

		Id = dataItem.ProDoc_Template_id;
		from = "Activity";
        Status = "R";
        template = dataItem.Template_Content;

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

	// window for accept functionality in section
    function AcceptRecord(e) {
         wnd = $("#k-wnd").kendoWindow({
              width: 400,
             height: 150,
             padding : 0,
             title: "Comments",
             actions: ["Close"],
             visible: false,
             modal: true,
         }).data("kendoWindow");

        detailsTemplate = kendo.template($("#comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //console.log("Accept: ", dataItem);

		Id = dataItem.ProDoc_Section_Assignment_id;
		from = "Section";
        Status = "S";
        template = dataItem.Template_Content;

        //console.log("id + status: ", Id, Status);

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
	}

	//window for revert functionality for sections
	function RevertRecord(e) {
		wnd = $("#k-wnd").kendoWindow({
             width: 400,
             height: 150,
             padding : 0,
             title: "Comments",
             actions: ["Close"],
             visible: false,
             modal: true,
		}).data("kendoWindow");

        detailsTemplate = kendo.template($("#comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //console.log("Reject: ", dataItem);

		Id = dataItem.ProDoc_Section_Assignment_id;
		from = "Section";
        Status = "R";
        template = dataItem.Template_Content;

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

	// accept or revert submit functionality
    function UpdateAcceptReject() {
        Comment = $("#comment").val();
        //console.log("Update: ",Id, Status, Comment);

        $.ajax({
            url: '@Url.Action("UpdateAcceptReject", "Home")',
            type: 'post',
            dataType: 'json',
            data: {
                id: Id,
                status: Status,
                comment: Comment,
				recTemplate: template,
				templateVar: from
            },
            success: function (res) {
               swal(res.info);
              //  alert(res)
                //console.log("Success: ", res.info);
                wnd.center().close();
                						reloadPage();

            },
            error: function (err) {
                swal("Error occured");
                //console.log("Error: ",err);
                wnd.center().close();
                						reloadPage();

            }
        });
    }

	// window for Difference button inside view data for activities
	function OpenActDiffData(ae) {

		diffActWnd = $("#k-dffwnd").kendoWindow({
			width: 800,
			height: 500,
			title: "Difference",
			visible: false,
			modal: true
		}).data("kendoWindow");

		diffActTemp = kendo.template($("#diff-act-template").html());

		var dItem = this.dataItem($(ae.currentTarget).closest("tr"));
		//console.log("Diff: ", dItem);
		var aId = dItem.Review_Activity_Id;

		//console.log("Difference: ", aId);

		$.ajax({
			url: '@Url.Action("GetDifferenceData", "Home")',
			type: 'post',
			data: {
				id: aId,
				templateVar: from
			},
			success: function (es) {
				//console.log("Success: ", es);
				var objdiff = { diff: es };
                diffActWnd.content(diffActTemp(objdiff));
               // reloadPage();
			},
			error: function (er) {
				//console.log("Error: ", er);
			}
		})

		diffActWnd.center().open();
	}

	// window for Difference button inside view data for sections
	function OpenDiffData(od) {

		diffSecWnd = $("#k-dffwnd").kendoWindow({
			width: 800,
			height: 500,
			title: "Difference",
			visible: false,
			modal: true
		}).data("kendoWindow");

		diffSecTemplate = kendo.template($("#diff-sec-template").html());

		var dti = this.dataItem($(od.currentTarget).closest("tr"));
		//console.log("Diff: ", dti);

		var	dId = dti.Review_Section_Id;

		//console.log("Difference: ", dti);

		$.ajax({
			url: '@Url.Action("GetDifferenceData", "Home")',
			type: 'post',
			data: {
				id: dId,
				templateVar: from
			},
			success: function (es) {
				//console.log("Success: ", es);
				var objdiff = { diff: es };
				diffSecWnd.content(diffSecTemplate(objdiff));
			},
			error: function (er) {
				//console.log("Error: ", er);
			}
		})

		diffSecWnd.center().open();
	}

     function downlaodrecord() {
        var gridData = $("#grid").data("kendoGrid").dataSource.data();
        var paramValue = JSON.stringify(gridData);
          $.ajax({
            url: '@Url.Action("PrictDoc", "Home")',
            type: 'Post',
              data: { doctext: paramValue },
            success: function (data) {
                        window.location = '@Url.Action("GenerateDoc", "Home")';
            },
              error: function () {
                  swal('Ajax error!');
            }
        });
    }
//$("#dialog").dialog({ autoOpen: false });
  //    $( function() {
  //        $("#dialog-modal").dialog({
  //              width: 1000,
  //            title: "Details",
  //            close: true
  //        }


  //        );

  //} );
    function submitrecord() {
        //swal("Submit");
        var gridData = $("#grid").data("kendoGrid").dataSource.data();
        var paramValue = JSON.stringify(gridData);
        $.ajax({
            url: '@Url.Action("SubmitReport", "Home")',
            type: 'Post',
            data: { doctext: paramValue },
            success: function (data) {
                // console.log(JSON.parse(data));
                var val = JSON.parse(data);
                //   swal(val);
                //  if (data) {
                //  swal(val.length)
                var len = val.length;
                var txt = "";
                if (len > 0) {
                    //txt = "<th>Type" +  + "</th><th>User_name" +  + "</th><th>Section" +  + "</th>";

                    for (var i = 0; i < len; i++) {
                        if (val[i].type && val[i].user_name && val[i].section) {
                            txt += "<tr><td>" + val[i].type + "</td><td>" + val[i].user_name + "</td><td>" + val[i].section + "</td></tr>";
                        }
                    }
                    if (txt != "") {
                        //$("#dialog-2").dialog("open");



                         var myWindow = $("#dialog-2");
                                    myWindow.kendoWindow({

                                        modal: true,

                                        width: "900px",

                                        height: "500px",

                                        title: "Report can not submit because below activities or sections are pending.",

                                        visible: false,

                                        actions: [

                                            "Minimize",

                                            "Close"

                                        ],

                                    }).data("kendoWindow").center().open();

                        //$('#dialog').dialog('open');
                        //  $("#table").empty();
                        $("#table").find("tr:gt(0)").remove();
                        $("#table").append(txt);
                        //$("#dialog-modal").show();
                        //   $('#dialog-modal').dialog('open');
                        //$("#table").dialog({
                        //    height: 140,
                        //    modal: true
                        //});
                        //$("#table").show();
                        //$(function () {
                        //    $("#submitbyn").on("click", function () {
                        //        $("#dialog-modal").dialog({
                        //            height: 140,
                        //            modal: true
                        //        });

                        //    });
                        //});
                    }
                }
                else {

                    swal("Report Submitted Successfully");
                                        window.location = '@Url.Action("Login", "Account")';

                }
                // }
                //$(function () {
                //    $("#openDialog").on("click", function () {
                //        $("#table").dialog({
                //            height: 140,
                //            modal: true
                //        });
                //        $("#table").show();
                //    });
                //});
                // window.location = '@Url.Action("GenerateDoc", "Home")';
            },
              error: function () {
                  swal('Ajax error!');
            }
        });
    }

    function SubmitSecRecord(e) {
          wnd = $("#k-wnd").kendoWindow({
             width: 400,
             height: 150,
             padding : 0,
             title: "Comments",
             actions: ["Close"],
             visible: false,
             modal: true,
         }).data("kendoWindow");

        detailsTemplate = kendo.template($("#sec-comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }


    function SubmitActRecord(e) {
         wnd = $("#ka-wnd").kendoWindow({
             width: 400,
             height: 150,
             padding : 0,
             title: "Contact Log",
             actions: ["Close"],
             visible: false,
             modal: true,
         }).data("kendoWindow");

        detailsTemplate = kendo.template($("#act-comment-template").html());

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }
        function opentab(evt, tabid) {
        var i, tablinks;
        var x = document.getElementsByClassName("tabs");
        for (i = 0; i < x.length; i++) {
            x[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < x.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" w3-tab", "");
        }
        document.getElementById(tabid).style.display = "block";
        evt.currentTarget.className += " w3-tab";
    }
</script>


<script type="text/x-kendo-template" id="sec-comment-template">

    <div style="display:none">

        <div id="pro-sec-id">#= ProDoc_Section_Assignment_id #</div>
        <div id="status">#= Status #</div>
        <div id="template-content">#= Template_Content #</div>

    </div>

    <div id="section-comment">
        <textarea id="comment" class="form-control popupfield" />
    </div>

    <br />

    @*<input type="submit" class="btn btn-primary" value="Submit" onclick="SubmitSecRecordByUser()" />*@
    <input type="submit" class="btn btn-primary" value="Submit" onclick="SubmitSecRecordByUser()" />

</script>


<script type="text/x-kendo-template" id="act-comment-template">

    <div style="display:none">

        <div id="pro-act-id">#= ProDoc_Template_id #</div>
        <div id="status">#= Status #</div>
        <div id="template-content">#= Template_Content #</div>

    </div>

    <div id="section-comment">
        <textarea id="comment" class="form-control popupfield" />
    </div>

    <br />

    <input type="submit" class="btn btn-primary" value="Submit" onclick="SubmitActRecordByUser()" style="float: right;margin-right: 2%;" />
</script>

<script type="text/x-kendo-template" id="comment-template">
    <div id="section-comment">
        <textarea id="comment" class="form-control popupfield" />
    </div>

    <br />

    <input type="submit" class="btn btn-primary" value="Submit" onclick="UpdateAcceptReject()" style="float: right;margin-right: 2%;" />
</script>

<script type="text/x-kendo-template" id="viewdata-template">

</script>

<script type="text/x-kendo-template" id="diff-sec-template">
    @*<div id="data-grid"></div>*@
    <div class='content'>
        #= diff #
    </div>
</script>

<script type="text/x-kendo-template" id="diff-act-template">
    <div class='content'>
        #= diff #
    </div>
</script>
<style>

    /*.w3-tab {
        color: blue !important;
    background-color: cornflowerblue;
    }*/
    .w3-button:hover {
        color: blue !important;
        background-color: darkgrey !important;
        padding: 10px;
    }

    .w3-tab {
        color: #000 !important;
        background-color: #ccc !important;
        padding: 10px;
    }
</style>


<div class="col-sm-6">
    <div class="kmmain">
        <h2 class="kicofmt">Report View on <span id="product-name"></span> <span id="doctype"></span> </h2>
    </div>
</div>
<div class="col-sm-6">
    <table class="revdat">
        @*<tr>
                <td>Document Type :<span id="doctype"></span></td>
            </tr>*@
        <tr>
            <td>Review Period :<span id="reviewprd"></span></td>
        </tr>
        @*<tr>
                <td>DLP</td>
                <td>31-Jul-2019</td>
            </tr>*@
        <tr>
            <td>KOM held on: <span id="komdate"></span></td>
        </tr>
    </table>
</div>
<div class="w3-bar" style="width: 33.5em;">
    @*<button class="w3-bar-item w3-button tablink w3-tab" style="border:none" onclick="opentab(event,'Activity_Assignments')">Activity Assignments</button>
        <button class="w3-bar-item w3-button tablink" style="border:none" onclick="opentab(event,'Section_Assignments')">Section Assignments</button>*@
</div>
<div class="row">
    <br />

    @*<div class="col-sm-12 col-md-12">
            Activity
            <div id="act-grid"></div>
        </div>

        <div class="col-sm-12 col-md-12">
            Section
            <div id="grid"></div>
        </div>*@
    @*<div id="Activity_Assignments" class="w3-container tabs" style="height: 100%;">
            <h2>Assignment & Timelines</h2>

        </div>

        <div id="Section_Assignments" class="tabs" style="display:none; height: 100%;">
            <h2>Section Assignments</h2>

        </div>*@



    <div id="k-wnd"></div>

    <div id="ka-wnd"></div>

    <div id="k-dwnd">
        <div id="data-grid"></div>
    </div>

    <div id="k-diffwnd">
        <div id="diff-data-grid"></div>
    </div>

    <div id="k-dffwnd"></div>
</div>
@*<div id="dialog-modal" style="display:none; background-color:aliceblue;">

    </div>*@
@*<div id="dialog" title="Pending Activity and section">
        <p>Dialog box</p>
    </div>*@
<div id="dialog-2" title="Pending Activity and section">
    <table id="table" border="1" style="text-align:center;padding:2px;width: 100%;">
        <tr>
            <th align="center">Type</th>
            <th align="center">Assigned To</th>
            <th align="center">Description</th>

        </tr>
    </table>
</div>


<div class="panel with-nav-tabs panel-primary">
    <div class="panel-heading">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#tab1primary" data-toggle="tab">Activity Assignments</a></li>
            <li><a href="#tab2primary" data-toggle="tab">Section Assignments</a></li>
        </ul>
    </div>
    <div class="panel-body">
        <div class="tab-content">
            <div class="tab-pane fade in active" id="tab1primary">
                <div class="col-sm-12 col-md-12 usr-tlenm">
                    @*<h2>Attendances</h2>*@
                    <div id="act-grid"></div>
                    @*<input type="button" value="Add new User" onclick="location.href='@Url.Action("AddUser", "User")'" />*@
                </div>
            </div>
            <div class="tab-pane fade atv-tab" id="tab2primary">
                <div class="col-sm-12 col-md-12 tble-tlenam">
                    @*<h2>Assignment & Timelines</h2>*@
                    <div id="grid"></div>
                    @*<input type="button" value="Add new role" onclick="location.href='@Url.Action("AddRole", "Role")'" />*@
                </div>

            </div>


        </div>
    </div>
    <button id="submitbyn" onclick="downlaodrecord();" class="k-content btn k-primary com-btn">Download Document</button>

    @if ((string)ViewData["status"] == "Ongoing")
    {
        <button id="submitbyn" onclick="submitrecord();" class="k-content btn k-primary com-btn">Complete Report</button>
    }
</div>








