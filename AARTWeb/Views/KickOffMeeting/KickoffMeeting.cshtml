
@{
    ViewBag.Title = "KickoffMeeting";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
@*<script src="~/GeneralJscripts/TelerikScripts/jquery.min.js"></script>
    <script src="~/GeneralJscripts/TelerikScripts/jszip.min.js"></script>
    <script src="~/GeneralJscripts/TelerikScripts/kendo.all.min.js"></script>

    <link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet" />
    <link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.rtl.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.default.min.css" rel="stylesheet">
    <link href="~/GeneralJscripts/TelerikCSS/kendo.default.mobile.min.css" rel="stylesheet">*@
@*<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">*@


<script type="text/javascript">

    var selectedRole = "";
		var selectedUser = "";
		var selectedBehalf = "";

   $(document).ready(function () {
        var docData;
        var alluser;
        getDocTypeData();
       getUserByRoleData();

        function getDocTypeData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetRolesList","Product")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (result) {
                    docData = JSON.parse(result);
                },
                error: function (response) {
                    swal('error');
                }
            });
        }
        function getUserByRoleData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetUsersList","Product")',
                contentType: "application/json;charset=utf-8",
                data: {

                },
                dataType: "json",
                async: false,
                success: function (result) {
                    alluser = JSON.parse(result);
                },
                error: function (response) {
                    swal('error');
                }
            });
        }

        var productdtls;
         var prodoctemplate;
         var prodocsection;
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetProDocStructure","KickOffMeeting")',
                contentType: "application/json",
                dataType: "json",
                async: false,
                success: function (result) {
                    productdtls = JSON.parse(result.getprodocdtls);
                    //$("#product-name").text(productdtls[0].productname);
                    $("#doctype").text(productdtls[0].prodocid);
                    //$("#doctype").text(productdtls[0].documentname + " id : " +  productdtls[0].prodocid);

                    $("#reviewprd").text(productdtls[0].reviewperiod);

                    $("#komdate").text(productdtls[0].kom);

                    prodoctemplate = JSON.parse(result.getprodoctemplate);
                    prodocsection = JSON.parse(result.getprodocsecassignment);
                    //console.log(productdtls);
                },
                error: function (response) {
                    swal('error');
                }
            });

       $("#grid").kendoGrid({
           dataSource: {
               //pageSize: 10,

               schema: {
                   model: {
                       fields:


                       {
                           prodocid: { defaultValue: @ViewBag.pro_doc_id},

                           attendiesrole: {
                               defaultValue: { role_id: " ", role_name: " " },
                               validation: {
                                   required: true,
                                   roleValidation: function (input) {
                                       if (input.is("[name=attendiesrole]") && input.val() == "0") {
                                           input.attr("data-roleValidation-msg", "Role Required");
                                           return false;
                                       }
                                       return true;
                                   }
                               }
                           },
                           attendiesuser: {
                               defaultValue: { user_id: " ", user_name: " " },
                                validation: {
                                   required: true,
                                   userValidation: function (input) {
                                       if (input.is("[name=attendiesuser]") && input.val() == "0") {
                                           input.attr("data-userValidation-msg", "User Required");
                                           return false;
                                       }
                                       if (input.is("[name=attendiesuser]") && selectedUser == selectedBehalf) {
                                           input.attr("data-userValidation-msg", "Both user and BehalfOf can't be same.")
                                           return false;
                                       }
                                       return true;
                                   }
                               }
                           },
                           attendiesbehalfof: {
                               defaultValue: { user_id: "0", user_name: "Not Applicable" },
                               validation: {
                                   required: true,
                                   //validateBehalfOf: function (input) {
                                   //    if (input.is("[name=attendiesbehalfof]") && selectedBehalf == selectedUser) {
                                   //        input.attr("data-validateBehalfOf-msg", "Both BehalfOf and user can't be same.")
                                   //        return false;
                                   //    }
                                   //    return true;
                                   //}
                               }
                           }

                       }
                   }
               }
           },
           toolbar: [{ name: "create", text: "Attendances" }],
           //editable: "popup", // use inline mode so both dropdownlists are visible (required for cascading)
           reorderable: true,
           sortable: true,
           //pageable: {
           //    alwaysVisible: true,
           //    pageSizes: [10, 20, 30]
           //},
           resizable: true,
           // createAt: "bottom",
           editable: {
               mode: "popup",
               createAt: "bottom"
           },
           height: 550,


           columns: [

               {
                   // The modelId column.
                   title: "Role",
                   field: "attendiesrole",  // bound to the modelId field
                   template: "#=attendiesrole.role_name#", //the template shows the name corresponding to the modelId field
                   editor: function (container) { // use a dropdownlist as an editor
                       var input = $('<input id="attendiesrole_id" name="attendiesrole">');
                       input.appendTo(container);
                       input.kendoDropDownList({
                           dataTextField: "role_name",
                           dataValueField: "role_id",
                           dataSource: docData,// bind it to the models array
                           optionLabel: {
                                role_id: "0",
                                role_name: "--Select--"
                           },
                           select: function (e) {
                                //console.log(e.dataItem);
                                var selectedItem = e.dataItem.role_name;
                                selectedRole = selectedItem;
                                getUserByRoleData(selectedItem);
                            }
                       }).appendTo(container);
                   }
               },

               //{
               //    // The modelId column.
               //    title: "User",
               //    field: "attendiesuser",  // bound to the modelId field
               //    template: "#=attendiesuser.user_name#", //the template shows the name corresponding to the modelId field
               //    editor: function (container) { // use a dropdownlist as an editor
               //        var input = $('<input id="attendiesuser" name="user_id">');
               //        input.appendTo(container);
               //        input.kendoDropDownList({
               //            dataTextField: "user_name",
               //            dataValueField: "user_id",
               //            cascadeFrom: "role_id", // cascade from the brands dropdownlist
               //            dataSource: alluser, // bind it to the models array
               //            optionLabel: {
               //                user_name: "Select a user",
               //                user_id: "0"
               //            }
               //        }).appendTo(container);
               //    }
               //},
               {
                   // The modelId column.
                   title: "User",
                   field: "attendiesuser",  // bound to the modelId field
                   template: "#=attendiesuser.user_name#", //the template shows the name corresponding to the modelId field
                   editor: function (container) { // use a dropdownlist as an editor
                       var input = $('<input id="attendiesuser" name="attendiesuser">');
                       input.appendTo(container);
                       input.kendoDropDownList({
                           dataTextField: "user_name",
                           dataValueField: "user_id",
                           cascadeFrom: "attendiesrole_id", // cascade from the brands dropdownlist
                           dataSource: alluser,// bind it to the models array
                           optionLabel: {
                               user_id: "0",
                               user_name: "--Select--"
                           },
                           select: function (e) {
                               selectedUser = e.dataItem.user_name;
                              // console.log("Selected User: ", selectedUser);
                           }
                       }).appendTo(container);
                   }
               },
               {
                   // The modelId column.
                   title: "Behalf Of",
                   field: "attendiesbehalfof",  // bound to the modelId field
                   template: "#=attendiesbehalfof.user_name#", //the template shows the name corresponding to the modelId field
                   editor: function (container) { // use a dropdownlist as an editor
                       var input = $('<input id="attendiesbehalfof_id" name="attendiesbehalfof">');
                       input.appendTo(container);
                       input.kendoDropDownList({
                           dataTextField: "user_name",
                           dataValueField: "user_id",
                           cascadeFrom: "attendiesrole_id", // cascade from the brands dropdownlist
                           dataSource: alluser,// bind it to the models array
                           optionLabel: {
                                user_id: "0",
                                user_name: "Not Applicable"
                            },
                            select: function (e) {
                                selectedBehalf = e.dataItem.user_name

                            }
                       }).appendTo(container);
                   }
               },
               {
                   command: ["destroy"],
                   title: "&nbsp;",
                   width: "250px"
               },


           ],
          dataBound: function (e) {
                    selectedUser = "";
                    selectedBehalf = "";
                    var records = e.sender.dataSource.data();

                    var dataItem;
                    var i;
                    for (i = 0; i < records.length; i++) {
                        if (i >= 1) {
                            var j;
                            for (j = 0; j < i; j++) {



                                if (records[i].attendiesrole != undefined) {



                                    if (records[j].attendiesrole.role_name + records[j].attendiesuser.user_name == records[i].attendiesrole.role_name + records[i].attendiesuser.user_name) {
                                        swal("User already exists for that role.");
                                        dataItem = records[i];
                                        $('#grid').data("kendoGrid").dataSource.remove(dataItem);
                                    }



                                    if (i < records.length) {
                                        if (records[j].attendiesuser.user_name + records[j].attendiesbehalfof.user_name == records[i].attendiesbehalfof.user_name + records[i].attendiesuser.user_name) {
                                            swal("User and behalf combination can't be same.");
                                            dataItem = records[i];
                                            $('#grid').data("kendoGrid").dataSource.remove(dataItem);
                                        }
                                    }

                                }
                            }
                        }
                    }
                },
       });



         @*$.ajax({
                type: "Get",
                url: '@Url.Action("GetProDocStructure","KickOffMeeting")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (result) {
                    Data = JSON.parse(result);
                    swal(Data)

                },
             error: function (response) {
                 //console.log(response);
                    swal('error');
                }
            });*@
       $("#KOMTemplate").kendoGrid({
           //dataSource:komtempalte,
           dataSource: {
               data: prodoctemplate,
               pageSize: 15,

               schema: {
                   model: {
                       fields: {
                                                      prodocid: { type: "string", editable: false },

                           product_document_mapping_id: { type: "string", editable: false },

                           document_template_id: { type: "string", editable: false },
                           role_id: { type: "string", validation: { required: true }, editable: false },

                           role_name: { type: "string", validation: { required: true }, editable: false },
                           user: { defaultValue: { user_id: 0, user_name: "Select User" }, editable: true },
                           action: { type: "string", validation: { required: false }, editable: false },
                           agree_timeline: { type: "date", validation: { required: false }, editable: true },
                           target_timeline: { type: "date", validation: { required: false }, editable: false },
                       }
                   }
               },
           },
           //height: 650,
           reorderable: true,
           sortable: true,
           pageable: {
               alwaysVisible: true,
               pageSizes: [10, 20, 30, 'All']
           },
           resizable: true,

           editable: {
               mode: "incell",
           },


           columns: [
                              { field: "prodocid", title: "Report ID", width: "150px", editable: false },

               { field: "role_name", title: "Role", width: "150px", editable: false },
               {
                   field: "user", title: "Assign To", width: "100px",
                   editor: categoryDropDownEditor3,
                   template: "#= user.user_name#"

               },
               { field: "action", title: "Action", width: "200px", editable: false },
               { field: "agree_timeline", title: "Agreed Timeline", editor:agtDateEditor, format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },
               { field: "target_timeline", title: "Target Timeline", type: "date", format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },
               { field: "comment", title: "Remark/Comments", width: "200px" },
           ]
       });

       $("#KOMSection").kendoGrid({
           //dataSource:komtempalte,
           dataSource: {
               data: prodocsection,
               pageSize: 50,
               schema: {
                   model: {
                       //id: section_id,
                       fields: {
                           prodocid: { type: "string", editable: false },

                           product_document_mapping_id: { type: "string", editable: false },
                           document_section_assignment_id: { type: "string", editable: false },
                           section_heading: { type: "string", validation: { required: true }, editable: false },
                           //section_sub_id: { type: "string", validation: { required: true }, editable: false },
                           section_sub_heading: { type: "string", validation: { required: false }, editable: false },
                           role_id: { type: "string", validation: { required: true }, editable: false },
                           role_name: { type: "string", validation: { required: true }, editable: false },
                           user: { editable: true },
                           agree_timeline: { type: "date", validation: { required: false }, editable: true },

                           target_timeline: { type: "date", validation: { required: false }, editable: false },
                       }
                   }
               },
               //group: { field: "section_id" }

           },
           //height: 650,
           reorderable: true,
           sortable: true,
           pageable: {
               alwaysVisible: true,
               pageSizes: [15, 20, 30,'All']
           },
           resizable: true,
           groupable: true,

           editable: {
               mode: "incell",
           },


           columns: [
               //{ field: "role_id", title: "Role_id", width: "150px",editable: false },
               //{ field: "section_sub_id", title: "Section No", width: "150px", editable: false },
               { field: "prodocid", title: "Report ID", width: "150px", editable: false },

               { field: "section_heading", title: "Section", width: "150px", editable: false, groupable: true },

               { field: "section_sub_heading", title: "Section Heading", width: "150px", editable: false },
               { field: "role_name", title: "Role", width: "150px", editable: false },
               { field: "user", title: "Assign To", width: "100px", editor: categoryDropDownEditor4, template: "#= user.user_name #" },
               { field: "agree_timeline", title: "Agreed Timeline",editor:agtDateEditor, format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },

               { field: "target_timeline", title: "Target Timeline", type: "date", format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },
               { field: "comment", title: "Remark/Comments", width: "200px" },
               //{ command: ["edit"], title: "&nbsp;", width: "250px" }

           ],

       });

       function categoryDropDownEditor3(container, options) {
           $('<input name="' + options.field + '"/>')
               .appendTo(container)
               .kendoDropDownList({
                   autoBind: true,
                  optionLabel: {
                               user_id: "0",
                               user_name: "--Select--"
                           },
                   dataTextField: "user_name",
                   dataValueField: "user_name",
                   dataSource: {
                       transport: {
                           read: {
                               url: '@Url.Action("GetFilteredUserList", "Product")',
                               data: {
                                   id: options.model.role_id
                               },
                               type: 'post',
                               dataType: 'json'
                           }
                       }
                   }
               });
       };

       function categoryDropDownEditor4(container, options) {
           $('<input  name="' + options.field + '"/>')
               .appendTo(container)
               .kendoDropDownList({
                   autoBind: true,
                  optionLabel: {
                               user_id: "0",
                               user_name: "--Select--"
                           },
                   dataTextField: "user_name",
                   dataValueField: "user_name",
                   dataSource: {
                       transport: {
                           read: {
                               url: '@Url.Action("GetFilteredUserList", "Product")',
                               data: {
                                   id: options.model.role_id
                               },
                               type: 'post',
                               dataType: 'json'
                           }
                       }
                   }
               });
       }
       function agtDateEditor(container, options) {
        var d = new Date($("#komdate").text().replace(/-/gi, '/'));
        var minimumDate = kendo.parseDate(d,"dd/MMM/yyyy");
      //  var updatedDate = kendo.date.addDays(minimumDate, 10);
        $('<input onkeydown="return false;" name="' + options.field + '"/>')
            .appendTo(container)
            .kendoDatePicker({
                format: "dd-MMM-yyyy",
                value: minimumDate,
                min: minimumDate,
                max: options.model.target_timeline
            });
    }
   });

    function submitrecord() {

        var docatten = $("#grid").data("kendoGrid").dataSource.data();
        var docactivity = $("#KOMTemplate").data("kendoGrid").dataSource.data();
        var docsection = $("#KOMSection").data("kendoGrid").dataSource.data();
        if (docatten.length < 1) {
            swal("No attendees added.")
            return;
        }
        $.ajax({
            url: '@Url.Action("InsertProDocKOMDtls","KickOffMeeting")',
            type: 'POST',
            datatype: "application/json",
            data: { modelatten: JSON.parse(JSON.stringify(docatten)), docactivity: JSON.parse(JSON.stringify(docactivity)), docsection: JSON.parse(JSON.stringify(docsection)) },
            async: true,
            success: function (response) {
                console.log(response);

                console.log(response.responseText);
                swal(response.responseText)
                if (response.responseText.includes("Inserted"))
                   // confirm("Want to download MOM")
                    window.location = '@Url.Action("Manager", "Home")';
            },
            error: function (err) {
                swal(response.responseText);
            }

        });

    }

    function opentab(evt, tabid) {
        var i, tablinks;
        var x = document.getElementsByClassName("tabs");
        for (i = 0; i < x.length; i++) {
            x[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < x.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" w3-tab", "");
        }
        document.getElementById(tabid).style.display = "block";
        evt.currentTarget.className += " w3-tab";
    }
</script>
<style>

    /*.w3-tab {
        color: blue !important;
    background-color: cornflowerblue;
    }*/
     .k-grid-content {
    height:500px;
    }
    .k-pager-sizes {
    display : block !important;
    }
    .k-pager-info{
        display:block !important;
    }
    button, select {
        border-radius: 4px;
        text-transform: none;
        height: 35px;
        padding: 0px 15px 0px 20px;
        margin-top: 11px;
        margin-right: 6px;
    }

    .w3-button:hover {
        border-radius: 4px;
        color: #000 !important;
        background-color: #93c8df !important;
        border: none;
    }

    .tabs h2 {
        margin-bottom: 0px;
        color: #27477c;
        margin: 0px;
        padding-bottom: 15px;
        font-weight: 600;
        font-size: 23px;
    }

    .w3-bar {
        float: right;
    }

    .w3-tab {
        border-radius: 4px;
        color: #FFF !important;
        background-color: #106297 !important;
        border: none;
    }

    .rvprd {
        color: #eb5627;
        font-size: 15px;
    }

    .kck-tle {
        color: #27477c;
        font-weight: 600;
        font-size: 26px;
    }

    .rvsdate {
        float: right;
    }

    .pd {
        padding: 0px;
    }

    .attdc-btns {
        float: right;
        padding-right: 0px;
    }
</style>

<body>



    <div class="row">
        <div class="col-sm-6">
            <div class="kmmain">
                <h2 class="kicofmt">Kick-off Meeting on <span id="product-name"></span> <span id="doctype"></span> </h2>
            </div>
        </div>
        <div class="col-sm-6">
            <table class="revdat">
                @*<tr>
                        <td>Document Type :<span id="doctype"></span></td>
                    </tr>*@
                <tr>
                    <td>Review Period : <span id="reviewprd"></span></td>
                </tr>
                @*<tr>
                        <td>DLP</td>
                        <td>31-Jul-2019</td>
                    </tr>*@
                <tr>
                    <td>KOM held on: <span id="komdate"></span></td>
                </tr>
            </table>

        </div>
        <div class="col-md-12">

            <div class="panel with-nav-tabs panel-primary">
                <div class="panel-heading">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab1primary" data-toggle="tab">Attendances</a></li>
                        <li><a href="#tab2primary" data-toggle="tab">Activity Assignments</a></li>
                        <li><a href="#tab3primary" data-toggle="tab">Section Assignments</a></li>
                    </ul>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="tab1primary">
                            <div class="col-sm-12 col-md-12 usr-tlenm">
                                @*<h2>Attendances</h2>*@
                                <div id="grid"></div>
                                @*<input type="button" value="Add new User" onclick="location.href='@Url.Action("AddUser", "User")'" />*@
                            </div>
                        </div>
                        <div class="tab-pane fade atv-tab" id="tab2primary">
                            <div class="col-sm-12 col-md-12 tble-tlenam">
                                @*<h2>Assignment & Timelines</h2>*@
                                <div id="KOMTemplate"></div>
                                @*<input type="button" value="Add new role" onclick="location.href='@Url.Action("AddRole", "Role")'" />*@
                            </div>

                        </div>
                        <div class="tab-pane fade atv-tab" id="tab3primary">
                            <div class="col-sm-12 col-md-12 tble-tlenam">
                                @*<h2>Section Assignments</h2>*@
                                <div id="KOMSection"></div>
                                @*<input type="button" value="Add new role" onclick="location.href='@Url.Action("AddRole", "Role")'" />*@
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="col-sm-12">
        <button id="submitbyn" onclick="submitrecord();" class="k-content btn k-primary com-btn">Submit</button>
    </div>

    @*<div class="w3-bar" style="width: 33.5em;">
            <button class="w3-bar-item w3-button tablink w3-tab" style="border:none" onclick="opentab(event,'Attendances')">Attendances</button>
            <button class="w3-bar-item w3-button tablink" style="border:none" onclick="opentab(event,'Activity_Assignments')">Activity Assignments</button>
            <button class="w3-bar-item w3-button tablink" style="border:none" onclick="opentab(event,'Section_Assignments')">Section Assignments</button>
        </div>*@


    <div id="Attendances" class="w3-container tabs" style=" height: 100%;">

    </div>
    <div id="Activity_Assignments" class="w3-container tabs" style="display:none;    height: 100%;">
        <h2>Assignment & Timelines</h2>
        <div id="KOMTemplate"></div>
    </div>
    <div id="Section_Assignments" class="tabs" style="display:none; height: 100%;">

    </div>
    <br />


</body>


