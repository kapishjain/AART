
@{
    ViewBag.Title = "KickoffMeeting";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}
<script src="~/GeneralJscripts/TelerikScripts/jquery.min.js"></script>
<script src="~/GeneralJscripts/TelerikScripts/jszip.min.js"></script>
<script src="~/GeneralJscripts/TelerikScripts/kendo.all.min.js"></script>

<link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet" />
<link href="~/GeneralJscripts/TelerikCSS/kendo.common.min.css" rel="stylesheet">
<link href="~/GeneralJscripts/TelerikCSS/kendo.rtl.min.css" rel="stylesheet">
<link href="~/GeneralJscripts/TelerikCSS/kendo.default.min.css" rel="stylesheet">
<link href="~/GeneralJscripts/TelerikCSS/kendo.default.mobile.min.css" rel="stylesheet">
@*<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">*@


<script type="text/javascript">

   $(document).ready(function () {
        var docData;
        var alluser;
        getDocTypeData();
        getUserByRoleData();
        function getDocTypeData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetRolesList","Product")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (result) {
                    docData = JSON.parse(result);
                },
                error: function (response) {
                    alert('error');
                }
            });
        }
        function getUserByRoleData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetUsersList","Product")',
                contentType: "application/json;charset=utf-8",
                data: {

                },
                dataType: "json",
                async: false,
                success: function (result) {
                    alluser = JSON.parse(result);
                },
                error: function (response) {
                    alert('error');
                }
            });
        }
     
        var productdtls;
         var prodoctemplate;
         var prodocsection;
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetProDocStructure","KickOffMeeting")',
                contentType: "application/json",
                dataType: "json",
                async: false,
                success: function (result) {
                    productdtls = JSON.parse(result.getprodocdtls);
                    $("#product-name").text(productdtls[0].productname);
                    $("#doctype").text(productdtls[0].documentname);

                    $("#reviewprd").text(productdtls[0].reviewperiod);

                    $("#komdate").text(productdtls[0].kom);

                    prodoctemplate = JSON.parse(result.getprodoctemplate);
                    prodocsection = JSON.parse(result.getprodocsecassignment);
                    console.log(productdtls);
                },
                error: function (response) {
                    alert('error');
                }
            });

        $("#grid").kendoGrid({
            dataSource: {
                pageSize: 20,

                schema: {
                    model: {
                        fields:


                        {
                            prodocid: { defaultValue: @ViewBag.pro_doc_id},

                            attendiesrole: { defaultValue: { role_id: " ", role_name: " " }, validation: { required: true } },
                            attendiesuser: { defaultValue: { user_id: " ", user_name: " " }, validation: { required: true } },
                            attendiesbehalfof: { defaultValue: { user_id: " ", user_name: " " }, validation: { required: true } }

                        }
                    }
                }
            },
            toolbar: [{ name: "create", text: "Attendances" }],
            //editable: "popup", // use inline mode so both dropdownlists are visible (required for cascading)
            pageable: true,
            // createAt: "bottom",
            editable: {
                mode: "popup",
                createAt: "bottom"
            },
            height: 550,
            columns: [
               
                 {
                    // The modelId column.
                    title: "Role",
                    field: "attendiesrole",  // bound to the modelId field
                    template: "#=attendiesrole.role_name#", //the template shows the name corresponding to the modelId field
                    editor: function (container) { // use a dropdownlist as an editor
                        var input = $('<input id="attendiesrole_id" name="attendiesrole">');
                        input.appendTo(container);
                        input.kendoDropDownList({
                            dataTextField: "role_name",
                            dataValueField: "role_id",
                            dataSource: docData,// bind it to the models array
                           optionLabel: {
                                role_name: " ",
                                 role_id: " "
                            }
                        }).appendTo(container);
                    }
                },
                //{
                //    // The modelId column.
                //    title: "User",
                //    field: "attendiesuser",  // bound to the modelId field
                //    template: "#=attendiesuser.user_name#", //the template shows the name corresponding to the modelId field
                //    editor: function (container) { // use a dropdownlist as an editor
                //        var input = $('<input id="attendiesuser" name="user_id">');
                //        input.appendTo(container);
                //        input.kendoDropDownList({
                //            dataTextField: "user_name",
                //            dataValueField: "user_id",
                //            cascadeFrom: "role_id", // cascade from the brands dropdownlist
                //            dataSource: alluser, // bind it to the models array
                //            optionLabel: {
                //                user_name: "Select a user",
                //                user_id: "0"
                //            }
                //        }).appendTo(container);
                //    }
                //},
                  {
                    // The modelId column.
                    title: "User",
                    field: "attendiesuser",  // bound to the modelId field
                    template: "#=attendiesuser.user_name#", //the template shows the name corresponding to the modelId field
                    editor: function (container) { // use a dropdownlist as an editor
                        var input = $('<input id="attendiesuser" name="attendiesuser">');
                        input.appendTo(container);
                        input.kendoDropDownList({
                            dataTextField: "user_name",
                            dataValueField: "user_id",
                            cascadeFrom: "attendiesrole_id", // cascade from the brands dropdownlist
                            dataSource: alluser,// bind it to the models array
                            optionLabel: {
                                user_name: " ",
                                user_id: " "
                            }
                        }).appendTo(container);
                    }
                },
                {
                    // The modelId column.
                    title: "Behalf Of",
                    field: "attendiesbehalfof",  // bound to the modelId field
                    template: "#=attendiesbehalfof.user_name#", //the template shows the name corresponding to the modelId field
                    editor: function (container) { // use a dropdownlist as an editor
                        var input = $('<input id="attendiesbehalfof_id" name="attendiesbehalfof">');
                        input.appendTo(container);
                        input.kendoDropDownList({
                            dataTextField: "user_name",
                            dataValueField: "user_id",
                            cascadeFrom: "attendiesrole_id", // cascade from the brands dropdownlist
                            dataSource: alluser,// bind it to the models array
                            optionLabel: {
                                user_name: " ",
                                user_id: " "
                            }
                        }).appendTo(container);
                    }
                },
                {
                    command: ["edit", "destroy"],
                    title: "&nbsp;",
                    width: "250px"
                }

            ]
        });



         @*$.ajax({
                type: "Get",
                url: '@Url.Action("GetProDocStructure","KickOffMeeting")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                async: false,
                success: function (result) {
                    Data = JSON.parse(result);
                    alert(Data)

                },
             error: function (response) {
                 console.log(response);
                    alert('error');
                }
            });*@
       $("#KOMTemplate").kendoGrid({
           //dataSource:komtempalte,
           dataSource: {
               data: prodoctemplate,
               schema: {
                   model: {
                       fields: {
                           product_document_mapping_id: { type: "string", editable: false },

                           document_template_id: { type: "string", editable: false },
                           role_id: { type: "string", validation: { required: true }, editable: false },

                           role_name: { type: "string", validation: { required: true }, editable: false },
                           user: { defaultValue: { user_id: "Select User", user_name: "Select User" }, editable: true },
                           action: { type: "string", validation: { required: false }, editable: false },
                           agree_Timeline: { type: "date", validation: { required: false }, editable: true },
                           target_Timeline: { type: "date", validation: { required: false }, editable: false },
                       }
                   }
               }
           },
           //height: 750,
           // groupable: true,
           //sortable: true,
           //pageable: {
           //    refresh: true,
           //    pageSizes: true,
           //    // buttonCount: 5
           //},

           editable: {
               mode: "incell",
           },


           columns: [
               { field: "role_name", title: "Role", width: "150px", editable: false },
               {
                   field: "user", title: "Assign To", width: "100px",
                   editor: categoryDropDownEditor3

               },
               { field: "action", title: "Action", width: "200px", editable: false },
               { field: "agree_Timeline", title: "Agree Timeline", type: "date", format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },
               { field: "target_Timeline", title: "Target Timeline", type: "date", format: "{0:dd-MMM-yyyy}", width: "130px", editable: false },
               { field: "comment", title: "Remark/Comments", width: "200px" },
           ]
       });

         $("#KOMSection").kendoGrid({
             //dataSource:komtempalte,
             dataSource: {
                 data: prodocsection,
                 schema: {
                     model: {
                           //id: section_id,
                         fields: {
                            product_document_mapping_id: { type: "string", editable: false },
                             document_section_assignment_id  : { type: "string", editable: false},
                             section_heading: { type: "string", validation: { required: true }, editable: false },
                             section_sub_id: { type: "string", validation: { required: true }, editable: false },
                             section_sub_heading: { type: "string", validation: { required: false }, editable: false },
                             role_id: { type: "string", validation: { required: true }, editable: false },
                             role_name: { type: "string", validation: { required: true }, editable: false },
                             user: { defaultValue: { user_id: "Select User", user_name: "Select User" }, editable: true },
                             target_timeline: { type: "date", validation: { required: false }, editable: true },
                         }
                     }
                 },
                             //group: { field: "section_id" }

             },
            // height: 750,
             groupable: true,
             sortable: true,
             //pageable: {
             //    refresh: true,
             //    pageSizes: true,
             //    // buttonCount: 5
             //},

             editable: {
                 mode: "incell",
             },


             columns: [
                 //{ field: "role_id", title: "Role_id", width: "150px",editable: false },
                 { field: "section_heading", title: "Section", width: "150px", editable: false,groupable:true },

                 { field: "section_sub_id", title: "Section_No", width: "150px", editable: false },
                 { field: "section_sub_heading", title: "Section Heading", width: "150px", editable: false },
                 { field: "role_name", title: "Role", width: "150px", editable: false },
                 { field: "user", title: "Assign To", width: "100px", editor: categoryDropDownEditor4},
                 { field: "target_timeline", title: "Agree Timeline", type: "date", format: "{0:dd-MMM-yyyy}", width: "130px", editable: true },
                 { field: "comment", title: "Remark/Comments", width: "200px" },
                 //{ command: ["edit"], title: "&nbsp;", width: "250px" }

             ],

         });

       function categoryDropDownEditor3(container, options) {          
           $('<input required name="' + options.field + '"/>')
               .appendTo(container)
               .kendoDropDownList({
                   autoBind: true,
                   optionLabel: "Select User",
                   dataTextField: "user_name",
                   dataValueField: "user_name",
                   dataSource: {
                       transport: {
                           read: {
                               url: '@Url.Action("GetFilteredUserList", "Product")',
                               data: {
                                   id: options.model.role_id
                               },
                               type: 'post',
                               dataType: 'json'
                           }
                       }
                   }
               });
       };

       function categoryDropDownEditor4(container, options) {             
           $('<input required name="' + options.field + '"/>')
               .appendTo(container)
               .kendoDropDownList({
                   autoBind: true,
                   dataTextField: "user_name",
                   dataValueField: "user_name",
                   dataSource: {
                       transport: {
                           read: {
                               url: '@Url.Action("GetFilteredUserList", "Product")',
                               data: {
                                   id: options.model.role_id
                               },
                               type: 'post',
                               dataType: 'json'
                           }
                       }
                   }
               });
       }
   });

    function submitrecord() {

        var docatten = $("#grid").data("kendoGrid").dataSource.data();
        var docactivity = $("#KOMTemplate").data("kendoGrid").dataSource.data();
        var docsection = $("#KOMSection").data("kendoGrid").dataSource.data();
        $.ajax({
            url: '@Url.Action("InsertProDocKOMDtls","KickOffMeeting")',
            type: 'POST',
            datatype: "application/json",
            data: { modelatten: JSON.parse(JSON.stringify(docatten)), docactivity: JSON.parse(JSON.stringify(docactivity)), docsection: JSON.parse(JSON.stringify(docsection)) },
            async: true,
            success: function (response) {
                alert(response.responseText)
                if (response.responseText.includes("Inserted"))
                    window.location = '@Url.Action("Manager", "Home")';
            },
            error: function (err) {
                alert(response.responseText);
                // console.log(err);
            }

        });

    }

    function opentab(evt, tabid) {
        var i, tablinks;
        var x = document.getElementsByClassName("tabs");
        for (i = 0; i < x.length; i++) {
            x[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < x.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" w3-tab", "");
        }
        document.getElementById(tabid).style.display = "block";
        evt.currentTarget.className += " w3-tab";
    }
</script>
<style>
    /*.w3-tab {
        color: blue !important;
    background-color: cornflowerblue;
    }*/
    .w3-button:hover {
            color: blue !important;
    background-color: darkgrey !important;
    padding:10px;
    }
    .w3-tab {
            color: #000!important;
    background-color: #ccc!important;
    padding:10px;
    }
    </style>
<body>
    <h2 >Kick-off Meeting on <span id="product-name"></span> </h2>
    <table>
        <tr>
            <td>Document Type :<span id="doctype"></span></td>
        </tr>
        <tr>
            <td>Review Period :<span id="reviewprd"></span></td>
        </tr>
        @*<tr>
                <td>DLP</td>
                <td>31-Jul-2019</td>
            </tr>*@
        <tr>
            <td>KOM held on: <span id="komdate"></span></td>
        </tr>
    </table>
    <div class="w3-bar" style="width: 33.5em;">
        <button class="w3-bar-item w3-button tablink w3-tab" style="border:none" onclick="opentab(event,'Attendances')">Attendances</button>
        <button class="w3-bar-item w3-button tablink" style="border:none" onclick="opentab(event,'Activity_Assignments')">Activity Assignments</button>
        <button class="w3-bar-item w3-button tablink"  style="border:none" onclick="opentab(event,'Section_Assignments')">Section Assignments</button>
    </div>


    <div id="Attendances" class="w3-container tabs" style=" height: 100%;">
        <h2>Attendances</h2>
        <div id="grid"></div>
    </div>

    <div id="Activity_Assignments" class="w3-container tabs" style="display:none;    height: 100%;">
        <h2>Assignment & Timelines</h2>
        <div id="KOMTemplate"></div>
    </div>

    <div id="Section_Assignments" class="tabs" style="display:none; height: 100%;">
        <h2>Section Assignments</h2>
        <div id="KOMSection"></div>
    </div>

    <br />

    <div>
        <button id="submitbyn" onclick="submitrecord();" class="k-content btn k-primary">Submit</button>
    </div>
</body>


